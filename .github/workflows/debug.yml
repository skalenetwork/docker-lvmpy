name: Build and debi
on: [push, pull_request]

jobs:
  prepare:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install ubuntu dependencies
      run: |
        sudo apt-get update && sudo apt-get install build-essential debhelper devscripts equivs python3.8 dh-virtualenv
    - name: Checkout code
      uses: actions/checkout@master

    - name: Build deb package
      run: dpkg-buildpackage -us -uc -b -d

    - name: Get deb package
      id: deb
      run: "::set-output name=pkg::ls ../*.deb"

    - name: Calculate version
      run: |
        export BRANCH=${GITHUB_REF##*/}
        echo "Branch $BRANCH"
        export VERSION=$(bash ./scripts/calculate_version.sh)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Version $VERSION"
    
    - name: Rename deb package
      run: mv ../${{ steps.deb.outputs.pkg }} ../docker-lvmpy-${{ env.VERSION }}.deb

    - name: Show dir
      run: ls -altr ../

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: true

    - name: Upload deb package
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ../${{ matrix.asset_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream
